<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Giraffe Academy</title>
    <link>http://www.giraffeacademy.com/programming-languages/csharp/</link>
    <description>Recent content in C# on Giraffe Academy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Nov 2017 18:34:44 -0500</lastBuildDate>
    
	<atom:link href="http://www.giraffeacademy.com/programming-languages/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installation</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/installation/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:44 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/installation/</guid>
      <description> Code Copy </description>
    </item>
    
    <item>
      <title>Drawing A Pyramid</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/drawing-a-pyramid/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:44 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/drawing-a-pyramid/</guid>
      <description> Code CopyConsole.WriteLine(&amp;#34; /|&amp;#34;); Console.WriteLine(&amp;#34; / |&amp;#34;); Console.WriteLine(&amp;#34; / |&amp;#34;); Console.WriteLine(&amp;#34;/___|&amp;#34;); </description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/variables/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:44 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/variables/</guid>
      <description> Code Copy/* Names are case-sensitive and may begin with: letters, _, @ After, may include letters, numbers, _ Convention says Start with a lowercase word, then additional words are capitalized ex. myFirstVariable */ string characterName = &amp;#34;George&amp;#34;; int characterAge = 70; Console.WriteLine(&amp;#34;There once was a man named &amp;#34; &amp;#43; characterName); Console.WriteLine(&amp;#34;He was &amp;#34; &amp;#43; characterAge &amp;#43; &amp;#34; years old&amp;#34;); Console.WriteLine(&amp;#34;He really liked the name &amp;#34; &amp;#43; characterName); Console.WriteLine(&amp;#34;But didn&amp;#39;t like being &amp;#34; &amp;#43; characterAge); </description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/data-types/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:44 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/data-types/</guid>
      <description>Code Copystring name = &amp;#34;Mike&amp;#34;; // String&amp;#39;s are objects not primitives char testGrade = &amp;#39;A&amp;#39;; // single 16-bit Unicode character. // short, int, long can be pre-pended with &amp;#39;u&amp;#39; for &amp;#39;unsigned&amp;#39; byte age0 = 0; // 8-bit unsigned integer short age1 = 10; // 16-bit signed integer. int age2 = 20; // 32-bit signed integer long age3 = 30L; // 64-bit signed integer float gpa0 = 2.5F; // 32-bit floating point double gpa1 = 3.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/strings/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:44 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/strings/</guid>
      <description> Code Copystring greeting = &amp;#34;Hello&amp;#34;; // indexes: 01234 Console.WriteLine( greeting.Length ); Console.WriteLine( greeting[0] ); Console.WriteLine( greeting.IndexOf(&amp;#34;llo&amp;#34;) ); Console.WriteLine( greeting.IndexOf(&amp;#34;z&amp;#34;) ); Console.WriteLine( greeting.Substring(2) ); Console.WriteLine( greeting.Substring(1, 3) ); </description>
    </item>
    
    <item>
      <title>Math</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/math/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:44 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/math/</guid>
      <description> Code CopyConsole.WriteLine(2 * 3); // Basic Arithmetic: &amp;#43;, -, /, * Console.WriteLine(10 % 3); // Modulus Op. : returns remainder of 10/3 Console.WriteLine(1 &amp;#43; 2 * 3); // order of operations Console.WriteLine(10 / 3.0); // int&amp;#39;s and doubles int num = 10; num &amp;#43;= 100; // &amp;#43;=, -=, /=, *= Console.WriteLine(num); num&amp;#43;&amp;#43;; Console.WriteLine(num); Console.WriteLine( Math.Pow(2, 3) ); Console.WriteLine( Math.Sqrt(144) ); Console.WriteLine( Math.Round(2.7) ); </description>
    </item>
    
    <item>
      <title>Getting Input From Users</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/getting-input-from-users/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/getting-input-from-users/</guid>
      <description> Code CopyConsole.Write(&amp;#34;Enter username: &amp;#34;); string username = Console.ReadLine(); Console.WriteLine($&amp;#34;Hello {username}&amp;#34;); </description>
    </item>
    
    <item>
      <title>Creating A Calculator</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/creating-a-calculator/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/creating-a-calculator/</guid>
      <description> Code CopyConsole.Write(&amp;#34;Enter num1: &amp;#34;); double num1 = Convert.ToDouble(Console.ReadLine()); Console.Write(&amp;#34;Enter num2: &amp;#34;); double num2 = Convert.ToDouble(Console.ReadLine()); Console.WriteLine(num1 &amp;#43; num2); </description>
    </item>
    
    <item>
      <title>Building A Mad Libs Game</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/building-a-mad-libs-game/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/building-a-mad-libs-game/</guid>
      <description> Code CopyConsole.Write(&amp;#34;Enter color: &amp;#34;); string color = Console.ReadLine(); Console.Write(&amp;#34;Enter plural noun: &amp;#34;); string pluralNoun = Console.ReadLine(); Console.Write(&amp;#34;Enter celebrity: &amp;#34;); string celebrity = Console.ReadLine(); Console.WriteLine($&amp;#34;Roses are {color}&amp;#34;); Console.WriteLine($&amp;#34;{pluralNoun} are blue&amp;#34;); Console.WriteLine($&amp;#34;I love {celebrity}&amp;#34;); </description>
    </item>
    
    <item>
      <title>Arrays</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/arrays/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/arrays/</guid>
      <description> Code Copy//int [] luckyNumbers = new int[10]; int[] luckyNumbers = { 4, 8, 15, 16, 23, 42 }; // indexes: 0 1 2 3 4 5 luckyNumbers[0] = 90; Console.WriteLine(luckyNumbers[0]); Console.WriteLine(luckyNumbers[1]); Console.WriteLine(luckyNumbers.Length); </description>
    </item>
    
    <item>
      <title>Methods</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/methods/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/methods/</guid>
      <description> Code Copypublic static void Main(string [] args){ int sum = AddNumbers(4, 60); Console.WriteLine(sum); } public static int AddNumbers(int num1, int num2){ return num1 &amp;#43; num2; } </description>
    </item>
    
    <item>
      <title>Return</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/return/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/return/</guid>
      <description> Code Copypublic static void Main(string [] args){ int sum = AddNumbers(4, 60); Console.WriteLine(sum); } public static int AddNumbers(int num1, int num2){ return num1 &amp;#43; num2; } </description>
    </item>
    
    <item>
      <title>If Statements</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/if-statements/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/if-statements/</guid>
      <description> Code Copybool isStudent = false; bool isSmart = false; if (isStudent &amp;amp;&amp;amp; isSmart) { Console.WriteLine(&amp;#34;You are a student&amp;#34;); } else if (isStudent &amp;amp;&amp;amp; !isSmart) { Console.WriteLine(&amp;#34;You are not a smart student&amp;#34;); } else { Console.WriteLine(&amp;#34;You are not a student and not smart&amp;#34;); } // &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, !=, == if (1 &amp;lt; 3) { Console.WriteLine(&amp;#34;number comparison was true&amp;#34;); } </description>
    </item>
    
    <item>
      <title>If Statements Cont</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/if-statements-cont/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/if-statements-cont/</guid>
      <description> Code Copybool isStudent = false; bool isSmart = false; if (isStudent &amp;amp;&amp;amp; isSmart) { Console.WriteLine(&amp;#34;You are a student&amp;#34;); } else if (isStudent &amp;amp;&amp;amp; !isSmart) { Console.WriteLine(&amp;#34;You are not a smart student&amp;#34;); } else { Console.WriteLine(&amp;#34;You are not a student and not smart&amp;#34;); } // &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, !=, == if (1 &amp;lt; 3) { Console.WriteLine(&amp;#34;number comparison was true&amp;#34;); } </description>
    </item>
    
    <item>
      <title>4 Function Calculator</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/calculator/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:46 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/calculator/</guid>
      <description> Code CopyConsole.Write(&amp;#34;Enter num1: &amp;#34;); double num1 = Convert.ToDouble(Console.ReadLine()); Console.Write(&amp;#34;Enter operator: &amp;#34;); string op = Console.ReadLine(); Console.Write(&amp;#34;Enter num2: &amp;#34;); double num2 = Convert.ToDouble(Console.ReadLine()); if (op == &amp;#34;&amp;#43;&amp;#34;){ Console.WriteLine(num1 &amp;#43; num2); } else if (op == &amp;#34;-&amp;#34;){ Console.WriteLine(num1 - num2); } else if (op == &amp;#34;/&amp;#34;){ Console.WriteLine(num1 / num2); } else if (op == &amp;#34;*&amp;#34;){ Console.WriteLine(num1 * num2); } else { Console.WriteLine(&amp;#34;Invalid Operator&amp;#34;); } </description>
    </item>
    
    <item>
      <title>Switch Statements</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/switch-statements/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:46 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/switch-statements/</guid>
      <description> Code Copychar myGrade = &amp;#39;A&amp;#39;; switch(myGrade){ case &amp;#39;A&amp;#39;: Console.WriteLine(&amp;#34;You Pass&amp;#34;); break; case &amp;#39;F&amp;#39;: Console.WriteLine(&amp;#34;You fail&amp;#34;); break; default: Console.WriteLine(&amp;#34;Invalid grade&amp;#34;); } </description>
    </item>
    
    <item>
      <title>While Loops</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/while-loops/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:46 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/while-loops/</guid>
      <description> Code Copyint index = 1; while(index &amp;lt;= 5){ Console.WriteLine(index); index&amp;#43;&amp;#43;; } index = 1; do{ Console.WriteLine(index); index&amp;#43;&amp;#43;; }while(index &amp;lt;= 5); </description>
    </item>
    
    <item>
      <title>Building A Guessing Game</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/building-a-guessing-game/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:46 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/building-a-guessing-game/</guid>
      <description> Code Copystring secretWord = &amp;#34;giraffe&amp;#34;; string guess = &amp;#34;&amp;#34;; int guessCount = 0; int guessLimit = 3; bool outOfGuesses = false; while(!guess == secretWord &amp;amp;&amp;amp; !outOfGuesses){ if(guessCount &amp;lt; guessLimit){ Console.Write(&amp;#34;Enter a guess: &amp;#34;); guess = Console.ReadLine(); guessCount&amp;#43;&amp;#43;; } else { outOfGuesses = true; } } if(outOfGuesses){ Console.WriteLine(&amp;#34;You Lose!&amp;#34;); } else { Console.WriteLine(&amp;#34;You Win!&amp;#34;); } </description>
    </item>
    
    <item>
      <title>For Loops</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/for-loops/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:46 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/for-loops/</guid>
      <description> Code Copyfor(int i = 0; i &amp;lt; 5; i&amp;#43;&amp;#43;){ Console.WriteLine(i); } int[] luckyNums = {4, 8, 15, 16, 23, 42}; foreach(int luckyNum in luckyNums){ Console.WriteLine(luckyNum); } </description>
    </item>
    
    <item>
      <title>Building An Exponent Method</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/building-an-exponent-function/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:46 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/building-an-exponent-function/</guid>
      <description> Code Copystatic int GetPow(int baseNum, int powNum) { int result = 1; for(int i = 0; i &amp;lt; powNum; i&amp;#43;&amp;#43;){ result = result * baseNum; } return result; } </description>
    </item>
    
    <item>
      <title>2d Arrays</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/2d-arrays/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:46 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/2d-arrays/</guid>
      <description> Code Copy// int [][] numberGrid = new int[2][3]; int[][] numberGrid = { new int[]{ 1, 2 }, new int[]{ 3, 4 } }; numberGrid[0][1] = 99; Console.WriteLine(numberGrid[0][0]); Console.WriteLine(numberGrid[0][1]); for(int i = 0; i &amp;lt; numberGrid.Length; i&amp;#43;&amp;#43;){ for(int j = 0; j &amp;lt; numberGrid[i].Length; j&amp;#43;&amp;#43;){ Console.WriteLine(numberGrid[i][j]); } } </description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/comments/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:47 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/comments/</guid>
      <description> Code Copy/* multi line comment */ // single // line // comment </description>
    </item>
    
    <item>
      <title>Try &amp; Catch</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/try-catch/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:47 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/try-catch/</guid>
      <description> Code Copy// this code takes a number from the user and // divides 10 by it. Enter &amp;#39;0&amp;#39; to trigger the exception try{ int division = 10 / Convert.ToInt32(Console.ReadLine()); }catch(DivideByZeroException e){ Console.WriteLine(e); }catch(Exception e){ Console.WriteLine(e); // Not best practice to use general Exception } // throws new exception throw new DivideByZeroException(&amp;#34;can&amp;#39;t divide numbers&amp;#34;); </description>
    </item>
    
    <item>
      <title>Classes &amp; Objects</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/classes-objects/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:47 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/classes-objects/</guid>
      <description> Code Copypublic class Book{ public string title; public string author; } public class App { public static void Main(string[] args) { Book book1 = new Book(); book1.title = &amp;#34;Harry Potter&amp;#34;; book1.author = &amp;#34;JK Rowling&amp;#34;; Console.WriteLine(book1.title); Book book2 = new Book(); book2.title = &amp;#34;Lord of the Rings&amp;#34;; book2.author = &amp;#34;JRR Tolkien&amp;#34;; Console.WriteLine(book2.title); } } </description>
    </item>
    
    <item>
      <title>Constructor Function</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/constructor-function/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:47 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/constructor-function/</guid>
      <description> Code Copypublic class Book{ public String title; public String author; public Book(String title, String author){ this.title = title; this.author = author; } } public class App { public static void Main(string[] args) { Book book1 = new Book(&amp;#34;Harry Potter&amp;#34;, &amp;#34;JK Rowling&amp;#34;); Console.WriteLine(book1.title); Book book2 = new Book(&amp;#34;Lord of the Rings&amp;#34;, &amp;#34;JRR Tolkien&amp;#34;); Console.WriteLine(book2.title); } } </description>
    </item>
    
    <item>
      <title>Class Methods</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/class-methods/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:48 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/class-methods/</guid>
      <description> Code Copypublic class Book{ public string title; public string author; public void ReadBook(){ Console.WriteLine($&amp;#34;Reading {this.title} by {this.author}&amp;#34;); } } </description>
    </item>
    
    <item>
      <title>Getters And Setters</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/getters-and-setters/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:48 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/getters-and-setters/</guid>
      <description> Code Copypublic class Movie{ private String title; private String rating; public Movie(String title, String rating){ this.title = title; this.setRating(rating); } public String getRating(){ return this.rating; } public void setRating(String rating){ if (rating == &amp;#34;G&amp;#34; || rating == &amp;#34;PG&amp;#34; || rating == &amp;#34;PG-13&amp;#34; || rating == &amp;#34;R&amp;#34; || rating == &amp;#34;NR&amp;#34;){ this.rating = rating; } else { this.rating = &amp;#34;NR&amp;#34;; } } } </description>
    </item>
    
    <item>
      <title>Static Class Attributes</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/static-class-attributes/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:48 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/static-class-attributes/</guid>
      <description> Code Copypublic class Song{ public string title; public string artist; public static int songCount = 0; public Song(string title, string artist){ this.title = title; this.artist = artist; songCount&amp;#43;&amp;#43;; } } public class App { public static void Main(string[] args) { Song song1 = new Song(&amp;#34;Holiday&amp;#34;, &amp;#34;Green Day&amp;#34;); Console.WriteLine(Song.songCount) } } </description>
    </item>
    
    <item>
      <title>Static Methods In Classes</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/static-methods-in-classes/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:48 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/static-methods-in-classes/</guid>
      <description> Code Copystatic class MyStaticClass{ public static int usefulAttribute = 99; public static void usefulFunction(){ // do something useful } } </description>
    </item>
    
    <item>
      <title>Inheritance</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/inheritance/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:48 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/inheritance/</guid>
      <description>Code Copypublic class Chef { public void MakeChicken() { Console.WriteLine(&amp;#34;The chef makes chicken&amp;#34;); } public void MakeSalad() { Console.WriteLine(&amp;#34;The chef makes salad&amp;#34;); } public virtual void MakeSpecialDish() { Console.WriteLine(&amp;#34;The chef makes a special dish&amp;#34;); } } public class ItalianChef : Chef { public void MakePasta() { Console.WriteLine(&amp;#34;The Chef make&amp;#39;s past&amp;#34;); } public override void MakeSpecialDish() { Console.WriteLine(&amp;#34;The chef makes chicken parm&amp;#34;); } } public class App { public static void Main(string[] args) { Chef myChef = new Chef(); myChef.</description>
    </item>
    
    <item>
      <title>In One Video</title>
      <link>http://www.giraffeacademy.com/programming-languages/csharp/in-one-video/</link>
      <pubDate>Wed, 08 Nov 2017 18:34:45 -0500</pubDate>
      
      <guid>http://www.giraffeacademy.com/programming-languages/csharp/in-one-video/</guid>
      <description>C# Overview C# (C Sharp) is a general purpose, staticly typed, object oriented programming language that was founded in 2000 by Microsoft as part of their .NET Initiative.
C# was designed to be portable and fast and is tightly coupled with Microsoft&amp;rsquo;s .Net Framework. It was created along side the .Net framework in the late 90s.
C# is one of the most popular programming languages in the world, and can be used to write applications on almost every platform including, Windows, Mac, iOS, Android, and Linux.</description>
    </item>
    
  </channel>
</rss>